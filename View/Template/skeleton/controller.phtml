
namespace <?= $module; ?>\Controller;

use Krystal\Application\Controller\AbstractController;
use Krystal\Stdlib\VirtualEntity;

final class <?= $controller; ?> extends AbstractController
{
    /**
     * Renders data grid
     * 
     * @return string
     */
    public function indexAction()
    {
        return $this->view->render('...', array(
            
        ));
    }

    /**
     * Renders a form
     * 
     * @param mixed $entity
     * @return string
     */
    private function createForm($entity)
    {
        return $this->view->render('....', array(
            'entity' => $entity
        ));
    }

    /**
     * Renders edit form
     * 
     * @param int $id Record id
     * @return mixed
     */
    public function editAction($id)
    {
        // Find a record by its id, then render a form by calling $this->createForm() here...
    }

    /**
     * Renders add form
     * 
     * @return string
     */
    public function addAction()
    {
        return $this->createForm(new VirtualEntity());
    }

    /**
     * Saves a record
     * 
     * @return mixed
     */
    public function saveAction()
    {
        $input = $this->request->getPost();

        // Handle persisting here ...
    }

    /**
     * Deletes a record by its id
     * 
     * @param int $id Record id
     * @return mixed
     */
    public function deleteAction($id)
    {
        $this->flashBag->set('success', 'An item has been successfully removed');

        $this->response->back();
    }
}
